1. טבלה לגינרוט שאלה
 ID || type||table_column||tamplate ||
 npx sequelize model:generate --name Questions --attributes type:integer,table_column:string,tamplate:string --underscored

2.שאלות שמורות
id || question string || answer || options || rate_5 || 4 || 3 || 2 || 1 || Number of votes || average_vote
npx sequelize model:generate --name Saved_Questions --attributes question:string,answer:string,options:text,rate_5:integer,rate_4:integer,rate_3:integer,rate_2:integer,rate_1:integer,vote_num:integer,avg_vote:float --underscored


שחקנים:
name||score
npx sequelize model:generate --name Players --attributes name:string,score:integer --underscored

שם||ניקוד נוכחי||תשבוות נכונות
random 1-50 17,37...
npx sequelize model:generate --name Current_Player --attributes name:string,current_score:integer,correct_answer:integer --underscored

לשחקן יוצג לאורך כל המשחק הניקוד הנוכחי שלו וכמה נקודות הוא קיבל על כל תשובה נכונה.

A(0-25) b(26-41) c(42-47) d(48-73) e(74-84) f(85-100)
55D,30B,99F

Type 1:(countries)
1. Which country is most populous?                     -Population density by countries-Population
2. Which country is least populous?                    -Population density by countries-Population
3. Which country is the largest by total area?         -Population density by countries-Area km2
4. Which country is the smallest by total area?        -Population density by countries-Area km2
5. Which country is the most densely populated?        -Population density by countries-Density pop./km2
6. Which country is the least densely populated?       -Population- density by countries-Density pop./km2
7. Which country has the most cell phones per person?  -General-Phones (per 1000)
* 8. Which country has the best quality of life?       -Quality of life-Quality of Life Index
* 9. Which country has the best Health care?           -Health care - Health Care Index
* 10. Which country has the higher elderly people percentage?   - Countries age structure-Age above 65 Years

Type 2:(x=country)
11. What is the capital of X?  -Capitals
12. How many people live in X? -Population density by countries(num)
13. In what continent is X?    -Capitals

Type 3:
14. Are there more people in X than in Y?                             -Population density by countries-Population
15. Is X larger than Y?                                               -Population density by countries-Area km2
16. Does X have a higher population density than Y?                   -Population density by countries-Density pop./km2
17. Is the quality of life in X higher than the quality of life in Y? -Quality of life-Quality of Life Index
18. Is the crime rate of X higher than the crime rate in Y?           -Crime index by countries- Crime Index
19. Are restaurants in X more expensive than restaurants in Y?        -Cost of living index by country-Cost of Living Index
* 20. Is the health care in X better than the health care in Y?       -Health care-:float,Health Care Index

npm i sequelize mysql2
npm install --save-dev sequelize-cli

tables:
population- Population, Area km2, Density popkm2

general- Phones (per 1000)
Quality of life-Quality of Life Index
Health care- Health Care Index
Crime index by countries- Crime Index
Countries age structure- Age above 65 Years n
Cost of living index by country- Cost of Living Index n
Capitals -capital, continent , country n

tables:
npx sequelize model:generate --name PopulationDensityByCountries --attributes rank:integer,country_or_dependent_territory:string,area_km2:float,area_mi2:float,population:integer,density_pop./km2:float,density_pop./mi2:float,date:text,population_source:text --underscored

npx sequelize model:generate --name Capital --attributes country:string,capital:string,continent:string --underscored

npx sequelize model:generate --name General --attributes region:string,coastline_coast_area_ratio:string,net_migration:integer,infant_mortality_per_1000_births:float,GDP_perCapita:integer,literacy%:float,phones_per1000:float,arable%:float,crops%:float,other%:float,climate:integer,birthrate:float,deathrate:float,agriculture:float,industry:float,service:float --underscored

npx sequelize model:generate --name QualityOfLife --attributes country:string,Quality_of_Life_Index:float,Purchasing_Power_Index:float,Safety_Index:float,Health_Care_Index:float,Cost_of_Living_Index:float,Property_Price_to_Income_Ratio:float,Traffic_Commute_Time_Index:float,Pollution_Index:float,climate_index:float --underscored

npx sequelize model:generate --name HealthCare --attributes country:string,healthCareIndex:float,healthCareExp.:float --underscored

npx sequelize model:generate --name Countries_age_structure --attributes country:string,age_0_to_14_Years:string,age_15_to_64_years:string,ageAbove65Years:string --underscored

npx sequelize model:generate --name CostOfLivingIndexByCountry --attributes country:string,cost_of_living_index:float,rent_index:float,cost_of_living_plus_rent_index:float,groceries_index:float,restaurant_price_index:float,local_purchasing_power_index:float --underscored

npx sequelize model:generate --name CrimeIndexByCountries --attributes country:string,crime_index:float,safety_index:float --underscored



SELECT g.country,g.Phones_per_1000, cap.Capital,cap.Continent,cost.Cost_of_Living_Index,age.Age_above_65_Years_percentage,crime.crime_index,h.health_care_index,q.Quality_of_Life_Index,p.Population,p.Area_km2,p.Density_popkm2
FROM general g LEFT JOIN capitals cap
using (country)
LEFT JOIN cost_of_living cost
using (country)
LEFT JOIN countries_age_structure age
using (country)
LEFT JOIN crime
using (country)
LEFT JOIN healthcare h
using (country)
LEFT JOIN quality_of_life q
using (country)
LEFT JOIN population_and_density p
on (p.Country_or_dependent_territory = g.country)

npx sequelize model:generate --name All_Data --attributes country:string,Phones_per_1000:float,Capital:string,Continent:string,Cost_of_Living_Index:float,Age_above_65_Years_percentage:integer,crime_index:float,health_care_index:float,Quality_of_Life_Index:float,Population:integer,Area_km2:integer,Density_popkm2:integer --underscored

npx sequelize-cli seed:generate --name insert_to_All_Data

await queryInterface.bulkInsert("countries_trivia",[])